@model ProjektZespolowy.Models.FinancialReport

@{
    ViewData["Title"] = "Utwórz Nowy Raport";
}

<div class="container mt-4">
    <h1 class="text-center text-success mb-4">@ViewData["Title"]</h1>

    <div class="card shadow-sm border-success">
        <div class="card-header bg-success text-white">
            <h4 class="mb-0">Formularz generowania nowego raportu</h4>
        </div>
        <div class="card-body">
            <form asp-action="Create" asp-controller="FinancialReports" method="post">
                <div class="form-group mb-3">
                    <label asp-for="Name" class="control-label">Nazwa</label>
                    <input asp-for="Name" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="CreationDate" class="control-label">Data Utworzenia</label>
                    <input asp-for="CreationDate" class="form-control" />
                </div>

                <h4 class="text-success">Pozycje w raporcie finansowym</h4>
                <table class="table table-bordered table-hover" id="raportItemsTable">
                    <thead class="table-success">
                        <tr>
                            <th>ID Pozycji</th>
                            <th>Nazwa Pozycji</th>
                            <th>Wartość</th>
                            <th>Typ</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr></tr>
                    </tbody>
                </table>

                <button type="button" id="addRowButton" class="btn btn-primary mb-3">Dodaj wiersz</button>
                <div class="d-flex justify-content-between">
                    <button type="submit" class="btn btn-success">Zapisz</button>
                    <a asp-action="Index" asp-controller="FinancialReports" class="btn btn-secondary">Powrót</a>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="alertModal" tabindex="-1" aria-labelledby="alertModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="alertModalLabel">Informacja</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="alertModalMessage"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addRowButton = document.getElementById('addRowButton');
            const tableBody = document.querySelector('#raportItemsTable tbody');

            addRowButton.addEventListener('click', function () {
                const rowCount = tableBody.rows.length;
                const newRow = document.createElement('tr');

                newRow.innerHTML = `
                                    <td>
                                                    <input type="number" class="form-control id" name="FinancialReportItems[${rowCount}].RaportId" oninput="fetchProductName(this)" required />
                                </td>
                                <td>
                                                            <input type="text" class="form-control name" name="FinancialReportItems[${rowCount}].Name" required/>
                                </td>
                                <td>
                                            <input type="number" class="form-control value" name="FinancialReportItems[${rowCount}].Value" required />
                                </td>
                                <td>
                                            <select class="form-control flow" name="FinancialReportItems[${rowCount}].Flow" required>
                                                <option value="Dochód">Dochód</option>
                                                <option value="Koszt">Koszt</option>
                                            </select>
                                </td>
                                <td>
                                    <button type="button" class="btn btn-danger" onclick="removeRow(this)">Usuń</button>
                                </td>
                        `;

                tableBody.appendChild(newRow);
            });

            window.removeRow = function (button) {
                const row = button.closest('tr');
                row.remove();

                Array.from(tableBody.rows).forEach((row, index) => {
                    row.querySelector('.id').name = `FinancialReportItems[${index}].RaportId`;
                    row.querySelector('.name').name = `FinancialReportItems[${index}].Name`;
                    row.querySelector('[name$=".value"]').name = `FinancialReportItems[${index}].Value`;
                    row.querySelector('[name$=".flow"]').name = `FinancialReportItems[${index}].Flow`;
                });
            };

            const form = document.getElementById('storageReportForm');
            const alertModal = new bootstrap.Modal(document.getElementById('alertModal'));
            const alertModalMessage = document.getElementById('alertModalMessage');
            const alertModalLabel = document.getElementById('alertModalLabel');

            form.addEventListener('submit', async function (event) {
                event.preventDefault();

                const formData = new FormData(form);

                try {
                    const response = await fetch(form.action, {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    });

                    if (response.ok) {
                        showModal('success', '✔️ Raport finansowy został zapisany.');
                        setTimeout(() => window.location.href = '@Url.Action("Index", "FinancialReports")', 2000);
                    } else {
                        const errorText = await response.text();
                        showModal('danger', `❌ Nie udało się zapisać raportu. Szczegóły: ${errorText}`);
                    }
                } catch (error) {
                    showModal('danger', `❌ Wystąpił błąd: ${error.message}`);
                }
            });

            function showModal(type, message) {
                alertModalLabel.textContent = type === 'success' ? 'Sukces' : 'Błąd';
                alertModalMessage.innerHTML = message;
                alertModal.show();
            }
        });
    </script>
}
