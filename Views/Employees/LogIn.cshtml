@model ProjektZespolowy.Models.Employee

@{
    ViewData["Title"] = "Zaloguj Się";
}

<div class="d-flex justify-content-center align-items-center vh-100">
    <div class="card shadow-sm border-primary" style="width: 100%; max-width: 400px;">
        <div class="card-header bg-primary text-white text-center">
            <h4 class="mb-0">Logowanie</h4>
        </div>
        <div class="card-body">
            <form id="loginForm" asp-action="LogIn" method="post">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger d-none"></div>

                <div class="form-group mb-3">
                    <label asp-for="Login" class="control-label fw-bold">Login</label>
                    <input asp-for="Login" class="form-control" />
                    <span asp-validation-for="Login" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="Haslo" class="control-label fw-bold">Hasło</label>
                    <input asp-for="Haslo" type="password" class="form-control" />
                    <span asp-validation-for="Haslo" class="text-danger"></span>
                </div>

                <div class="form-group d-flex justify-content-center">
                    <input type="submit" value="Zaloguj się" class="btn btn-primary w-100" />
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="alertModal" tabindex="-1" aria-labelledby="alertModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="alertModalLabel">Informacja</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="alertModalMessage"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('loginForm');
            const alertModal = new bootstrap.Modal(document.getElementById('alertModal'));
            const alertModalMessage = document.getElementById('alertModalMessage');
            const alertModalLabel = document.getElementById('alertModalLabel');

            form.addEventListener('submit', async function (event) {
                event.preventDefault();

                const formData = new FormData(form);
                const login = formData.get('Login')?.trim();
                const haslo = formData.get('Haslo')?.trim();

                if (!login && !haslo) {
                    showModal('danger', '❌ Formularz zawiera błędy:<br>Pola "Login" i "Hasło" są wymagane.');
                    return;
                } else if (!login || !haslo) {
                    const missingField = !login ? 'Login' : 'Hasło';
                    showModal('danger', `❌ Formularz zawiera błędy:<br>Pole "${missingField}" jest wymagane.`);
                    return;
                }

                try {
                    const response = await fetch(form.action, {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    });

                    if (response.ok) {
                        window.location.href = '@Url.Action("Index", "Home")';
                    } else {
                        const errorText = await response.text();
                        showModal('danger', `❌ Nie udało się zalogować. Szczegóły: ${errorText}`);
                    }
                } catch (error) {
                    showModal('danger', `❌ Wystąpił błąd: ${error.message}`);
                }
            });

            function showModal(type, message) {
                alertModalLabel.textContent = type === 'success' ? 'Sukces' : 'Błąd';
                alertModalMessage.innerHTML = message;
                alertModal.show();
            }
        });
    </script>
}