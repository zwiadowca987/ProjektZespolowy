@model ProjektZespolowy.Models.Supplier

@{
    ViewData["Title"] = "Usuń Dostawcę";
}

<div class="container my-5">
    <h1 class="text-center text-danger">Usuń Dostawcę</h1>
    <h3 class="text-center mb-4">Czy na pewno chcesz usunąć tego dostawcę?</h3>

    <div class="card shadow-sm border-danger">
        <div class="card-body">
            <h4 class="card-title text-danger">Szczegóły Dostawcy</h4>
            <hr />
            <dl class="row">
                <dt class="col-sm-3 text-secondary">Nazwa Dostawcy</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.NazwaDostawcy)</dd>

                <dt class="col-sm-3 text-secondary">Adres</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Adres)</dd>

                <dt class="col-sm-3 text-secondary">Kontakt</dt>
                <dd class="col-sm-9">@Html.DisplayFor(model => model.Kontakt)</dd>
            </dl>
        </div>
    </div>

    <div class="d-flex justify-content-center mt-4">
        <form id="deleteForm" asp-action="Delete" method="post" class="me-3">
            <input type="hidden" asp-for="DostawcaID" />
            <button type="submit" class="btn btn-danger btn-lg">Usuń</button>
        </form>
        <a asp-action="Index" class="btn btn-secondary btn-lg">Powrót do listy</a>
    </div>
</div>

<div class="modal fade" id="alertModal" tabindex="-1" aria-labelledby="alertModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="alertModalLabel">Informacja</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="alertModalMessage">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('deleteForm');
            const alertModal = new bootstrap.Modal(document.getElementById('alertModal'));
            const alertModalMessage = document.getElementById('alertModalMessage');
            const alertModalLabel = document.getElementById('alertModalLabel');

            form.addEventListener('submit', async function (event) {
                event.preventDefault();

                const formData = new FormData(form);

                try {
                    const response = await fetch(form.action, {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    });

                    if (response.ok) {
                        showModal('success', '✔️ Dostawca został usunięty.');
                        setTimeout(() => {
                            window.location.href = '@Url.Action("Index", "Suppliers")';
                        }, 2000); 
                    } else {
                        const errorText = await response.text();
                        showModal('danger', `❌ Nie udało się usunąć dostawcy. Szczegóły: ${errorText}`);
                    }
                } catch (error) {
                    showModal('danger', `❌ Wystąpił błąd: ${error.message}`);
                }
            });

            function showModal(type, message) {
                alertModalLabel.textContent = type === 'success' ? 'Sukces' : 'Błąd';
                alertModalMessage.innerHTML = message;
                alertModal.show();
            }
        });
    </script>
