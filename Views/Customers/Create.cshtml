@model ProjektZespolowy.Models.Customer

@{
    ViewData["Title"] = "Create";
}

<div class="container mt-5">
    <h1 class="text-primary">Dodaj Klienta</h1>
    <hr />
    <div class="row justify-content-center">
        <div class="col-md-6 p-4" style="border: 2px solid #28a745; border-radius: 10px;">
            <form id="addForm" asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <div class="form-group">
                    <label asp-for="Imie" class="form-label"></label>
                    <input asp-for="Imie" class="form-control" />
                    <span asp-validation-for="Imie" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Nazwisko" class="form-label"></label>
                    <input asp-for="Nazwisko" class="form-control" />
                    <span asp-validation-for="Nazwisko" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Adres" class="form-label"></label>
                    <input asp-for="Adres" class="form-control" />
                    <span asp-validation-for="Adres" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Email" class="form-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="form-group mt-4">
                    <input type="submit" value="Dodaj" class="btn btn-success w-100" />
                </div>
            </form>
        </div>
    </div>
    <div class="mt-3">
        <a asp-action="Index" class="btn btn-secondary">Powrót do listy</a>
    </div>
</div>
<div class="modal fade" id="alertModal" tabindex="-1" aria-labelledby="alertModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="alertModalLabel">Informacja</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="alertModalMessage"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('addForm');
            const alertModal = new bootstrap.Modal(document.getElementById('alertModal'));
            const alertModalMessage = document.getElementById('alertModalMessage');
            const alertModalLabel = document.getElementById('alertModalLabel');

            form.addEventListener('submit', async function (event) {
                event.preventDefault();

                const formData = new FormData(form);
                const requiredFields = ['Imie', 'Nazwisko', 'Adres', 'Email'];
                const emptyFields = [];

                requiredFields.forEach(field => {
                    const value = formData.get(field)?.trim();
                    if (!value) {
                        emptyFields.push(field);
                    }
                });

                if (emptyFields.length > 0) {
                    showModal('danger', `❌ Wypełnij wszystkie pola: ${emptyFields.join(', ')}.`);
                    return;
                }

                try {
                    const response = await fetch(form.action, {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        }
                    });

                    if (response.ok) {
                        showModal('success', '✔️ Klient dodany do bazy.');
                        setTimeout(() => window.location.href = '@Url.Action("Index", "Customers")', 2000);
                    } else {
                        const errorText = await response.text();
                        showModal('danger', `❌ Nie udało się dodać klienta. Szczegóły: ${errorText}`);
                    }
                } catch (error) {
                    showModal('danger', `❌ Wystąpił błąd: ${error.message}`);
                }
            });

            function showModal(type, message) {
                alertModalLabel.textContent = type === 'success' ? 'Sukces' : 'Błąd';
                alertModalMessage.innerHTML = message;
                alertModal.show();
            }
        });
    </script>
}