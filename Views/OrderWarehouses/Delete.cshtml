@model ProjektZespolowy.Models.OrderWarehouse

@{
    ViewData["Title"] = "Usuń Zamówienie";
}

<div class="container p-4 mt-5" style="border: 2px solid #dc3545; border-radius: 8px;">
    <h1 class="text-center">@ViewData["Title"]</h1>

    <h4>Czy na pewno chcesz usunąć to zamówienie?</h4>

    <dl class="row">
        <dt class="col-sm-4">Data Zamówienia</dt>
        <dd class="col-sm-8">@Model.Data.ToString("dd.MM.yyyy HH:mm")</dd>

        <dt class="col-sm-4">Produkt</dt>
        <dd class="col-sm-8">@Model.NazwaProduktu</dd>

        <dt class="col-sm-4">Dostawca</dt>
        <dd class="col-sm-8">@Model.Supplier?.NazwaDostawcy</dd>

        <dt class="col-sm-4">Ilość Do Zamówienia</dt>
        <dd class="col-sm-8">@Model.DoZamowienia</dd>

        <dt class="col-sm-4">Uwagi</dt>
        <dd class="col-sm-8">@Model.Uwagi</dd>

        <dt class="col-sm-4">Status Dostawy</dt>
        <dd class="col-sm-8">@Model.StatusDostawy</dd>
    </dl>

    <form id="deleteForm" asp-action="Delete">
        <input type="hidden" asp-for="ZamMag" />
        <div class="text-center">
            <button type="submit" class="btn btn-danger">Usuń</button>
            <a asp-action="Index" class="btn btn-secondary">Anuluj</a>
        </div>
    </form>
</div>
<div class="modal fade" id="alertModal" tabindex="-1" aria-labelledby="alertModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="alertModalLabel">Informacja</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="alertModalMessage">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Zamknij</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const form = document.getElementById('deleteForm');
                const alertModal = new bootstrap.Modal(document.getElementById('alertModal'));
                const alertModalMessage = document.getElementById('alertModalMessage');
                const alertModalLabel = document.getElementById('alertModalLabel');

                form.addEventListener('submit', async function (event) {
                    event.preventDefault();

                    const formData = new FormData(form);

                    try {
                        const response = await fetch(form.action, {
                            method: 'POST',
                            body: formData,
                            headers: {
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            }
                        });

                        if (response.ok) {
                            showModal('success', '✔️ Rekord został pomyślnie usunięty.');
                            setTimeout(() => {
                                window.location.href = '@Url.Action("Index", "OrderWarehouses")'; 
                            }, 2000);
                        } else {
                            const errorText = await response.text();
                            showModal('danger', `❌ Nie udało się usunąć rekordu. Szczegóły: ${errorText}`);
                        }
                    } catch (error) {
                        showModal('danger', `❌ Wystąpił błąd: ${error.message}`);
                    }
                });

                function showModal(type, message) {
                    alertModalLabel.textContent = type === 'success' ? 'Sukces' : 'Błąd';
                    alertModalMessage.innerHTML = message;
                    alertModal.show();
                }
            });
        </script>
}
